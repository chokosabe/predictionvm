"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EphemeralSigner = exports.PrivateKeySigner = void 0;
const ed25519_1 = require("@noble/curves/ed25519");
const Marshaler_1 = require("./Marshaler");
class PrivateKeySigner {
    constructor(privateKey) {
        this.privateKey = privateKey;
        if (this.privateKey.length !== 32) {
            throw new Error("Private key must be 32 bytes");
        }
    }
    async signTx(txPayload, abi) {
        const marshaler = new Marshaler_1.Marshaler(abi);
        const digest = marshaler.encodeTransaction(txPayload);
        const signature = ed25519_1.ed25519.sign(digest, this.privateKey);
        const pubKey = this.getPublicKey();
        return new Uint8Array([...digest, Marshaler_1.ED25519_AUTH_ID, ...pubKey, ...signature]);
    }
    getPublicKey() {
        return ed25519_1.ed25519.getPublicKey(this.privateKey);
    }
    async connect() {
        // No-op
    }
    static debugExtractPublicKey(signed) {
        const pubKey = signed.slice(-1 * (64 + 32)).slice(0, 32);
        return pubKey;
    }
}
exports.PrivateKeySigner = PrivateKeySigner;
class EphemeralSigner extends PrivateKeySigner {
    constructor() {
        super(ed25519_1.ed25519.utils.randomPrivateKey());
    }
}
exports.EphemeralSigner = EphemeralSigner;
